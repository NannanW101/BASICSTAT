[["index.html", "TLTE-889 Project Chapter 1 Chance Model 1.1 Coin Flipping Simulation 1.2 Doris &amp; Buzz Simulation 1.3 Binomial Distribution Calculator", " TLTE-889 Project Nannan Wang 2022-07-21 Chapter 1 Chance Model 1.1 Coin Flipping Simulation # The following code simulates the number of head obtained from flipping a coin 10 times. resultContainer &lt;- numeric(length=10) for (i in 1: 10){ # in each trail, there are only two possible outcomes, 0 represents tail and 1 represents head. resultContainer[i] &lt;- sample(0:1,1) } # Each value in the resultContainer represents result from flipping the coin each time, since one repetition contains 10 trails, there are 10 values in resultContainer. resultContainer ## [1] 1 0 1 0 0 0 0 0 0 1 # sumHead represents the total number of head obtained from flipping the coin 10 times. sumHead &lt;- sum(resultContainer) sumHead ## [1] 3 1.2 Doris &amp; Buzz Simulation # oneRep saves result of one repetion (16 trails). In each trial, outcome is 0 or 1. oneRep &lt;- rep(NA,16) # container saves result of all 100 replications. container &lt;- t(replicate(100,oneRep)) for (i in 1:100) { for (j in 1:16){ # 0 stands for Buzz guessing wrong and 1 stands for Buzz guessing correctly. container[i,j] &lt;- sample(0:1,1) } } # calculate number of head in each replication and save the result in the dis100Rep vector dis100Rep &lt;- rowSums(container) # create a dataframe &quot;simulatedDisM&quot; saving result for each repetition repLabel &lt;- 1:100 simulatedDis &lt;- cbind(repLabel,dis100Rep) simulatedDisM &lt;- as.data.frame(simulatedDis) head(simulatedDisM) ## repLabel dis100Rep ## 1 1 7 ## 2 2 8 ## 3 3 8 ## 4 4 8 ## 5 5 11 ## 6 6 4 # plot the resulted dataframe in a dot plot. library(ggplot2) ggplot(simulatedDisM, aes(x = dis100Rep)) + geom_dotplot(method=&quot;histodot&quot;,binwidth = 0.2)+ theme( axis.text.y=element_blank(), #remove y axis labels axis.ticks.y=element_blank() #remove y axis ticks )+ scale_x_continuous(breaks=c(1:16))+ labs(x=&quot;Number of Head&quot;) 1.3 Binomial Distribution Calculator # This example illustrate how to calculate the probablibity of obtaining 0 success from flipping a coin 10 times numberTrial &lt;- 10 numberSuccess &lt;- 0 successProb &lt;- 0.5 probability &lt;- function(n, x) { factorial(n) / factorial(n-x) / factorial(x)*0.5^x*0.5^(n-x) } prob0 &lt;- probability(numberTrial,numberSuccess) # Plot the distribution of getting number of heads from flipping a coin 10 times distvector &lt;- vector(&#39;numeric&#39;,length = 10) for (i in 1:10){ distvector[i] &lt;- probability(10,i) } dis &lt;- as.data.frame(cbind(seq(1,10),distvector)) barplot(dis$distvector,ylim=c(0,0.3),names.arg = dis$V1) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
